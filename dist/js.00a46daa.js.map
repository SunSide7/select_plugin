{"version":3,"sources":["js/select.js","js/index.js"],"names":["getTemplate","data","placeholder","selectedId","text","items","map","item","cls","id","value","join","Select","selector","options","$el","document","querySelector","event","type","target","dataset","toggle","select","close","$value","textContent","current","querySelectorAll","forEach","el","classList","remove","add","isOpen","open","$arrow","removeEventListener","clickHandler","innerHTML","contains","find","bind","addEventListener","window","s"],"mappings":"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","file":"js.00a46daa.js","sourceRoot":"..","sourcesContent":["const getTemplate = (data = [], placeholder, selectedId) => {\r\n    let text = placeholder || 'Placeholder по умолчанию'\r\n\r\n    const items = data.map(item => {\r\n        let cls = '';\r\n        if (item.id === selectedId) {\r\n            text = item.value;\r\n            cls = 'selected';\r\n        }\r\n        return `\r\n            <li class=\"select__item ${cls}\" data-type=\"item\" data-id=\"${item.id}\">${item.value}</li>\r\n        `;\r\n    })\r\n\r\n    return `\r\n        <div class=\"select__backdrop\" data-type=\"backdrop\"></div>\r\n        <div class=\"select__input\" data-type=\"input\">\r\n            <span data-type=\"value\">${text}</span>\r\n            <i class=\"fa fa-chevron-down\" data-type=\"arrow\"></i>\r\n        </div>\r\n        <div class=\"select__dropdown\">\r\n            <ul class=\"select__list\">\r\n                ${items.join('')}\r\n            </ul>\r\n        </div>\r\n    `;\r\n}\r\n\r\nexport class Select {\r\n    constructor(selector, options) {\r\n        this.$el = document.querySelector(selector);\r\n        this.options = options;\r\n        this.selectedId = options.selectedId;\r\n\r\n        this.#render();\r\n        this.#setup();\r\n    }\r\n\r\n    #render() {\r\n        const { placeholder, data } = this.options;\r\n        this.$el.classList.add('select');\r\n        this.$el.innerHTML = getTemplate(data, placeholder, this.selectedId);\r\n    }\r\n\r\n    #setup() {\r\n        this.clickHandler = this.clickHandler.bind(this);\r\n\r\n        this.$el.addEventListener('click', event => this.clickHandler(event));\r\n        this.$arrow = this.$el.querySelector('[data-type=\"arrow\"]');\r\n        this.$value = this.$el.querySelector('[data-type=\"value\"]');\r\n    }\r\n    \r\n    clickHandler(event) {\r\n        const {type} = event.target.dataset;\r\n\r\n        if (type === 'input') {\r\n            this.toggle();\r\n        } else if (type === 'item') {\r\n            const id = event.target.dataset.id;\r\n            this.select(id);\r\n        } else if (type == 'backdrop') {\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    get isOpen() {\r\n        return this.$el.classList.contains('open');\r\n    }\r\n\r\n    get current() {\r\n        return this.options.data.find(item => item.id === this.selectedId)\r\n    }\r\n\r\n    select(id) {\r\n        this.selectedId = id;\r\n        this.$value.textContent = this.current.value;\r\n\r\n        this.$el.querySelectorAll('[data-type=\"item\"]').forEach(el => {\r\n            el.classList.remove('selected');\r\n        })\r\n        this.$el.querySelector(`[data-id=\"${id}\"]`).classList.add('selected');\r\n\r\n        this.close();\r\n    }\r\n\r\n    toggle() {\r\n        this.isOpen ? this.close() : this.open()\r\n    }\r\n    \r\n    open() {\r\n        this.$arrow.classList.remove('fa-chevron-down');\r\n        this.$arrow.classList.add('fa-chevron-up');\r\n        this.$el.classList.add('open');\r\n    }\r\n    \r\n    close() {\r\n        this.$arrow.classList.add('fa-chevron-down');\r\n        this.$arrow.classList.remove('fa-chevron-up');\r\n        this.$el.classList.remove('open');\r\n        \r\n    }\r\n\r\n    \r\n    destroy() {        \r\n        this.$el.removeEventListener('click', () => this.clickHandler);\r\n        this.$el.innerHTML = '';\r\n    }\r\n}","import { Select } from './select'\r\n\r\nconst select = new Select('#select', {\r\n    placeholder: 'Выбери элемент',\r\n    selectedId: '4',\r\n    data: [\r\n        {id: '1', value: 'React'},\r\n        {id: '2', value: 'Angular'},\r\n        {id: '3', value: 'Vue'},\r\n        {id: '4', value: 'React Native'},\r\n        {id: '5', value: 'Next'},\r\n        {id: '6', value: 'Nest'},\r\n        {id: '7', value: 'Flutter'},\r\n    ]\r\n})\r\n\r\nwindow.s = select;"]}